{"version":3,"file":"admin.js","mappings":"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","sources":["webpack://@yippy/auth-ldap/webpack/bootstrap","webpack://@yippy/auth-ldap/webpack/runtime/compat get default export","webpack://@yippy/auth-ldap/webpack/runtime/define property getters","webpack://@yippy/auth-ldap/webpack/runtime/hasOwnProperty shorthand","webpack://@yippy/auth-ldap/external root \"flarum.reg.get('core', 'admin/app')\"","webpack://@yippy/auth-ldap/external root \"flarum.reg.get('core', 'common/components/Button')\"","webpack://@yippy/auth-ldap/external root \"flarum.reg.get('core', 'common/models/Group')\"","webpack://@yippy/auth-ldap/external root \"flarum.reg.get('core', 'common/helpers/textContrastClass')\"","webpack://@yippy/auth-ldap/./src/admin/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'admin/app');","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'common/components/Button');","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'common/models/Group');","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'common/helpers/textContrastClass');","import app from 'flarum/admin/app';\nimport Button from 'flarum/common/components/Button';\nimport Group from 'flarum/common/models/Group';\nimport textContrastClass from 'flarum/common/helpers/textContrastClass';\nconst settingsPrefix = 'yippy-auth-ldap';\nconst translationPrefix = 'yippy-auth-ldap.admin.settings.';\nconst ldapDomainsSettingKey = settingsPrefix + '.domains';\nconst ldapNicknameAvailableFields = [\n// Full Name\n'cn', 'commonName', 'displayName', 'name',\n// Title\n'title', 'personalTitle',\n// First Name\n'givenName',\n// Middle Initial\n'initials',\n// Last Name\n'sn', 'surname'];\nconst ldapEmailAvailableFields = [\n// Email Address\n'mail', 'rfc822Mailbox '];\nconst ldapUsernameAvailableFields = [\n// User ID\n'mailNickname', 'sAMAccountName', 'uid', 'userPrincipalName'];\nconst ldapSearchUsernameAvailableFields = [\n// User ID\n'mailNickname', 'sAMAccountName', 'uid', 'userPrincipalName',\n// Email Address\n'mail', 'rfc822Mailbox '];\nconst _sort = function (list, selected) {\n  if (list === void 0) {\n    list = [];\n  }\n  if (selected === void 0) {\n    selected = [];\n  }\n  // Must have the list sorted first before options are created, due to Select2 will sort array based on the list order.\n  for (let i = 0; i < selected.length; i++) {\n    const foundIndex = list.indexOf(selected[i]);\n    if (foundIndex > 0) {\n      list.splice(i, 0, list.splice(list.indexOf(selected[i]), 1)[0]);\n    }\n  }\n  return list;\n};\napp.initializers.add(settingsPrefix, () => {\n  app.registry.for(settingsPrefix).registerSetting({\n    setting: settingsPrefix + '.method_name',\n    label: app.translator.trans(translationPrefix + 'method_name'),\n    type: 'text',\n    placeholder: 'YunoHost'\n  }).registerSetting(function () {\n    let ldapDomains;\n    try {\n      ldapDomains = JSON.parse(this.setting(ldapDomainsSettingKey)());\n    } catch (e) {\n      // do nothing, we'll reset to something usable\n    }\n\n    // @ts-ignore variable used before assignment, it's fine\n    if (!Array.isArray(ldapDomains)) {\n      ldapDomains = [];\n    }\n\n    // Get all available permission groups\n    let permissionGroupList = app.store.all('groups').filter(group => {\n      if (group.id() === Group.MEMBER_ID || group.id() === Group.GUEST_ID) {\n        // Do not suggest \"virtual\" groups\n        return false;\n      } else {\n        return true;\n      }\n    });\n    let allPermissionGroupList = [];\n    permissionGroupList.forEach(permissionGroup => {\n      let modelPermissionGroup = {\n        id: permissionGroup.data.id,\n        text: permissionGroup.data.attributes.namePlural,\n        color: permissionGroup.data.attributes.color,\n        icon: permissionGroup.data.attributes.icon,\n        isHidden: permissionGroup.data.attributes.isHidden,\n        namePlural: permissionGroup.data.attributes.namePlural,\n        nameSingular: permissionGroup.data.attributes.nameSingular\n      };\n      allPermissionGroupList.push(modelPermissionGroup);\n    });\n    let availablePermissionGroupList = {\n      results: allPermissionGroupList\n    };\n    return m('.Form-group', [m('label', app.translator.trans(translationPrefix + 'domains.title')), m('.helpText', app.translator.trans(translationPrefix + 'domains.description')), m('table', {\n      style: 'table-layout:fixed'\n    }, [m('tbody', [ldapDomains.map((rule, index) => m('table', {\n      border: '1px solid black',\n      'style': rule.isEnabled || rule.isEnabled == undefined ? 'background-color: #ffffff' : 'background-color: #F88379'\n    }, [m('thead', m('tr', [m('th', app.translator.trans(translationPrefix + 'domains.banner', {\n      index: index + 1,\n      isEnabled: rule.isEnabled || rule.isEnabled == undefined ? app.translator.trans(translationPrefix + 'domains.is_enabled.enabled') : app.translator.trans(translationPrefix + 'domains.is_enabled.disabled')\n    })), m('th', Button.component({\n      className: 'Button Button--icon',\n      icon: 'fas fa-times',\n      onclick: () => {\n        ldapDomains.splice(index, 1);\n        this.setting(ldapDomainsSettingKey)(ldapDomains.length > 0 ? JSON.stringify(ldapDomains) : '');\n      }\n    }))])), m('tbody', [m('table', [m('thead', m('tr', [m('th', {\n      width: '30%'\n    }), m('th', {\n      width: '70%'\n    })])), m('tbody', [m('tr', [m('th', {\n      colspan: 2\n    }, app.translator.trans(translationPrefix + 'domains.header.server'))]), m('tr', [m('td', app.translator.trans(translationPrefix + 'domains.data.host')), m('td', m('input.FormControl', {\n      type: 'text',\n      value: rule.host || '',\n      placeholder: 'localhost',\n      onchange: event => {\n        rule.host = event.target.value;\n        this.setting(ldapDomainsSettingKey)(JSON.stringify(ldapDomains));\n      }\n    }))]), m('tr', [m('td', {\n      colspan: 2,\n      class: 'helpText'\n    }, app.translator.trans(translationPrefix + 'domains.data.host_help'))]), m('tr', [m('td', app.translator.trans(translationPrefix + 'domains.data.port')), m('td', m('input.FormControl', {\n      type: 'number',\n      value: rule.port || 389,\n      placeholder: '389',\n      onchange: event => {\n        rule.port = Number(event.target.value);\n        this.setting(ldapDomainsSettingKey)(JSON.stringify(ldapDomains));\n      }\n    }))]), m('tr', [m('td', {\n      colspan: 2,\n      class: 'helpText'\n    }, app.translator.trans(translationPrefix + 'domains.data.port_help'))]), m('tr', [m('td', app.translator.trans(translationPrefix + 'domains.data.version')), m('td', m('input.FormControl', {\n      type: 'number',\n      value: rule.version || 3,\n      placeholder: '3',\n      onchange: event => {\n        rule.version = Number(event.target.value);\n        this.setting(ldapDomainsSettingKey)(JSON.stringify(ldapDomains));\n      }\n    }))]), m('tr', [m('td', {\n      colspan: 2,\n      class: 'helpText'\n    }, app.translator.trans(translationPrefix + 'domains.data.version_help'))]), m('tr', [m('td', app.translator.trans(translationPrefix + 'domains.data.base_dn')), m('td', m('input.FormControl', {\n      type: 'text',\n      value: rule.baseDN || '',\n      placeholder: 'ou=users,dc=yunohost,dc=org',\n      onchange: event => {\n        rule.baseDN = event.target.value;\n        this.setting(ldapDomainsSettingKey)(JSON.stringify(ldapDomains));\n      }\n    }))]), m('tr', [m('td', {\n      colspan: 2,\n      class: 'helpText'\n    }, app.translator.trans(translationPrefix + 'domains.data.base_dn_help'))]), m('tr', [m('td', app.translator.trans(translationPrefix + 'domains.data.filter')), m('td', m('input.FormControl', {\n      type: 'text',\n      value: rule.filter || '',\n      placeholder: '(&(objectClass=posixAccount)(permission=cn=flarum.main,ou=permission,dc=yunohost,dc=org)',\n      onchange: event => {\n        rule.filter = event.target.value;\n        this.setting(ldapDomainsSettingKey)(JSON.stringify(ldapDomains));\n      }\n    }))]), m('tr', [m('td', {\n      colspan: 2,\n      class: 'helpText'\n    }, app.translator.trans(translationPrefix + 'domains.data.filter_help'))]), m('tr', [m('td', app.translator.trans(translationPrefix + 'domains.data.follow_referrals')), m('td', m('input', {\n      type: 'checkbox',\n      checked: rule.followReferrals,\n      onchange: event => {\n        rule.followReferrals = event.target.checked;\n        this.setting(ldapDomainsSettingKey)(JSON.stringify(ldapDomains));\n      }\n    }))]), m('tr', [m('td', app.translator.trans(translationPrefix + 'domains.data.use_ssl')), m('td', m('input', {\n      type: 'checkbox',\n      checked: rule.useSSL,\n      onchange: event => {\n        rule.useSSL = event.target.checked;\n        this.setting(ldapDomainsSettingKey)(JSON.stringify(ldapDomains));\n      }\n    }))]), m('tr', [m('td', app.translator.trans(translationPrefix + 'domains.data.use_tls')), m('td', m('input', {\n      type: 'checkbox',\n      checked: rule.useTLS,\n      onchange: event => {\n        rule.useTLS = event.target.checked;\n        this.setting(ldapDomainsSettingKey)(JSON.stringify(ldapDomains));\n      }\n    }))]), m('tr', [m('th', {\n      colspan: 2\n    }, app.translator.trans(translationPrefix + 'domains.header.admin'))]), m('tr', [m('td', app.translator.trans(translationPrefix + 'domains.data.admin_dn')), m('td', m('input.FormControl', {\n      type: 'text',\n      value: rule.admin.dn || '',\n      placeholder: 'cn=admin,dc=yunohost,dc=org',\n      onchange: event => {\n        rule.admin.dn = event.target.value;\n        this.setting(ldapDomainsSettingKey)(JSON.stringify(ldapDomains));\n      }\n    }))]), m('tr', [m('td', {\n      colspan: 2,\n      class: 'helpText'\n    }, app.translator.trans(translationPrefix + 'domains.data.admin_dn_help'))]), m('tr', [m('td', app.translator.trans(translationPrefix + 'domains.data.admin_password')), m('td', m('input.FormControl', {\n      type: 'text',\n      value: rule.admin.password || '',\n      placeholder: 'password',\n      onchange: event => {\n        rule.admin.password = event.target.value;\n        this.setting(ldapDomainsSettingKey)(JSON.stringify(ldapDomains));\n      }\n    }))]), m('tr', [m('td', {\n      colspan: 2,\n      class: 'helpText'\n    }, app.translator.trans(translationPrefix + 'domains.data.admin_password_help'))]), m('tr', [m('th', {\n      colspan: 2\n    }, app.translator.trans(translationPrefix + 'domains.header.search_fields'))]), m('tr', [m('td', {\n      colspan: 2\n    }, app.translator.trans(translationPrefix + 'domains.header.search_fields_description'))]), m('tr', [m('td', app.translator.trans(translationPrefix + 'domains.data.search_user_fields')), m('td', m('select', {\n      oncreate: _ref => {\n        let {\n          dom\n        } = _ref;\n        return $(dom).select2({\n          width: '100%',\n          multiple: true,\n          data: _sort(ldapSearchUsernameAvailableFields, rule.searchFields)\n        }).on(\"change\", function () {\n          this.dispatchEvent(new CustomEvent('edit', {\n            \"detail\": $(this).val()\n          }));\n        }).on('select2:select', function (e) {\n          var id = e.params.data.id;\n          var option = $(e.target).children('[value=' + id + ']');\n          option.detach();\n          $(e.target).append(option).change();\n        }).val(rule.searchFields || []).trigger(\"change\");\n      },\n      onedit: event => {\n        rule.searchFields = event.detail;\n        this.setting(ldapDomainsSettingKey)(JSON.stringify(ldapDomains));\n      }\n    }))]), m('tr', [m('td', {\n      colspan: 2,\n      class: 'helpText'\n    }, app.translator.trans(translationPrefix + 'domains.data.search_user_fields_help'))]), m('tr', [m('th', {\n      colspan: 2\n    }, app.translator.trans(translationPrefix + 'domains.header.flarum'))]), m('tr', [m('td', {\n      colspan: 2\n    }, app.translator.trans(translationPrefix + 'domains.header.flarum_description'))]), m('tr', [m('td', app.translator.trans(translationPrefix + 'domains.data.user_username')), m('td', m('select', {\n      value: rule.user.username || '',\n      oncreate: _ref2 => {\n        let {\n          dom\n        } = _ref2;\n        return $(dom).select2({\n          width: '100%',\n          allowClear: true,\n          placeholder: ''\n        }).on(\"change\", function () {\n          this.dispatchEvent(new CustomEvent('edit', {\n            \"detail\": this.value\n          }));\n        });\n      },\n      onedit: event => {\n        rule.user.username = event.detail;\n        this.setting(ldapDomainsSettingKey)(JSON.stringify(ldapDomains));\n      }\n    }, [ldapUsernameAvailableFields.map(field => [m('option', {\n      value: field\n    }, field)])]))]), m('tr', [m('td', app.translator.trans(translationPrefix + 'domains.data.user_mail')), m('td', m('select', {\n      value: rule.user.mail || '',\n      oncreate: _ref3 => {\n        let {\n          dom\n        } = _ref3;\n        return $(dom).select2({\n          width: '100%',\n          allowClear: true,\n          placeholder: ''\n        }).on(\"change\", function () {\n          this.dispatchEvent(new CustomEvent('edit', {\n            \"detail\": this.value\n          }));\n        });\n      },\n      onedit: event => {\n        rule.user.mail = event.detail;\n        this.setting(ldapDomainsSettingKey)(JSON.stringify(ldapDomains));\n      }\n    }, [ldapEmailAvailableFields.map(field => [m('option', {\n      value: field\n    }, field)])]))]), m('tr', [m('td', {\n      colspan: 2,\n      class: 'helpText'\n    }, app.translator.trans(translationPrefix + 'domains.data.user_mail_help'))]), m('tr', [m('td', app.translator.trans(translationPrefix + 'domains.data.user_nickname_fields')), m('td', m('select', {\n      oncreate: _ref4 => {\n        let {\n          dom\n        } = _ref4;\n        return $(dom).select2({\n          width: '100%',\n          multiple: true,\n          data: _sort(ldapNicknameAvailableFields, rule.user.nicknameFields)\n        }).on(\"change\", function () {\n          this.dispatchEvent(new CustomEvent('edit', {\n            \"detail\": $(this).val()\n          }));\n        }).on('select2:select', function (e) {\n          var id = e.params.data.id;\n          var option = $(e.target).children('[value=' + id + ']');\n          option.detach();\n          $(e.target).append(option).change();\n        }).val(rule.user.nicknameFields || []).trigger(\"change\");\n      },\n      onedit: event => {\n        rule.user.nicknameFields = event.detail;\n        this.setting(ldapDomainsSettingKey)(JSON.stringify(ldapDomains));\n      }\n    }))]), m('tr', [m('td', {\n      colspan: 2,\n      class: 'helpText'\n    }, app.translator.trans(translationPrefix + 'domains.data.user_nickname_fields_help'))]), m('tr', [m('td', app.translator.trans(translationPrefix + 'domains.data.permission_groups')), m('td', m('select', {\n      oncreate: _ref5 => {\n        let {\n          dom\n        } = _ref5;\n        return $(dom).select2({\n          templateResult: value => {\n            var output = '<span>';\n            if (value.icon) {\n              output += '<i class=\"fa fa-lg ' + value.icon.toLowerCase() + '\"></i> ';\n            }\n            output += value.text + \"</span>\";\n            return output;\n          },\n          templateSelection: value => {\n            var output = '<span style=\"padding: 5px 10px 5px 10px; background-color:' + value.color + ';\" class=\"' + textContrastClass(value.color) + '\">';\n            if (value.icon) {\n              output += '<i class=\"fa fa-lg ' + value.icon.toLowerCase() + '\"></i> ';\n            }\n            output += value.text + \"</span>\";\n            return output;\n          },\n          escapeMarkup: m => {\n            return m;\n          },\n          width: '100%',\n          multiple: true,\n          data: $.map(availablePermissionGroupList, function (obj) {\n            obj.text = obj.text || obj.name; // replace name with the property used for the text\n            return obj;\n          })\n        }).on(\"change\", function () {\n          this.dispatchEvent(new CustomEvent('edit', {\n            \"detail\": $(this).val()\n          }));\n        }).on('select2:select', function (e) {\n          var id = e.params.data.id;\n          var option = $(e.target).children('[value=' + id + ']');\n          option.detach();\n          $(e.target).append(option).change();\n        }).val(rule.permission && rule.permission.groups || []).trigger(\"change\");\n      },\n      onedit: event => {\n        if (rule.permission) {\n          rule.permission.groups = event.detail;\n        } else {\n          rule.permission = {\n            groups: event.detail\n          };\n        }\n        this.setting(ldapDomainsSettingKey)(JSON.stringify(ldapDomains));\n      }\n    }))]), m('tr', [m('td', {\n      colspan: 2,\n      class: 'helpText'\n    }, app.translator.trans(translationPrefix + 'domains.data.permission_groups_help'))]), m('tr', [m('td', app.translator.trans(translationPrefix + 'domains.data.is_enabled')), m('td', m('input', {\n      type: 'checkbox',\n      checked: rule.isEnabled || rule.isEnabled == undefined,\n      onchange: event => {\n        rule.isEnabled = event.target.checked;\n        this.setting(ldapDomainsSettingKey)(JSON.stringify(ldapDomains));\n      }\n    }))])])])])])), m('tr', m('td', Button.component({\n      className: 'Button Button--block',\n      onclick: () => {\n        ldapDomains.push({\n          host: '',\n          port: 389,\n          version: 3,\n          baseDN: '',\n          filter: '',\n          admin: {\n            dn: '',\n            password: ''\n          },\n          searchFields: [],\n          user: {\n            username: '',\n            mail: '',\n            nicknameFields: []\n          },\n          permission: {\n            groups: []\n          },\n          followReferrals: false,\n          useSSL: false,\n          useTLS: false,\n          isEnabled: true\n        });\n        this.setting(ldapDomainsSettingKey)(JSON.stringify(ldapDomains));\n      }\n    }, app.translator.trans(translationPrefix + 'domains.add'))))])])]);\n  }).registerSetting({\n    setting: settingsPrefix + '.onlyUse',\n    label: app.translator.trans(translationPrefix + 'onlyUse'),\n    type: 'boolean',\n    default: false\n  }).registerSetting({\n    setting: settingsPrefix + '.display_detailed_error',\n    label: app.translator.trans(translationPrefix + 'display_detailed_error'),\n    type: 'boolean',\n    default: false\n  });\n});"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","flarum","reg","settingsPrefix","translationPrefix","ldapDomainsSettingKey","ldapNicknameAvailableFields","ldapEmailAvailableFields","ldapUsernameAvailableFields","ldapSearchUsernameAvailableFields","_sort","list","selected","i","length","indexOf","splice","add","for","registerSetting","setting","label","trans","type","placeholder","ldapDomains","JSON","parse","this","e","Array","isArray","permissionGroupList","all","filter","group","id","allPermissionGroupList","forEach","permissionGroup","modelPermissionGroup","data","text","attributes","namePlural","color","icon","isHidden","nameSingular","push","availablePermissionGroupList","results","m","style","map","rule","index","border","isEnabled","undefined","className","onclick","stringify","width","colspan","value","host","onchange","event","target","class","port","Number","version","baseDN","checked","followReferrals","useSSL","useTLS","admin","dn","password","oncreate","_ref","dom","$","select2","multiple","searchFields","on","dispatchEvent","CustomEvent","val","params","option","children","detach","append","change","trigger","onedit","detail","user","username","_ref2","allowClear","field","mail","_ref3","_ref4","nicknameFields","_ref5","templateResult","output","toLowerCase","templateSelection","escapeMarkup","name","permission","groups","default"],"sourceRoot":""}