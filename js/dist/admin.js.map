{"version":3,"file":"admin.js","mappings":"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","sources":["webpack://@yippy/auth-ldap/webpack/bootstrap","webpack://@yippy/auth-ldap/webpack/runtime/compat get default export","webpack://@yippy/auth-ldap/webpack/runtime/define property getters","webpack://@yippy/auth-ldap/webpack/runtime/hasOwnProperty shorthand","webpack://@yippy/auth-ldap/external root \"flarum.core.compat['app']\"","webpack://@yippy/auth-ldap/external root \"flarum.core.compat['common/components/Button']\"","webpack://@yippy/auth-ldap/external root \"flarum.core.compat['common/models/Group']\"","webpack://@yippy/auth-ldap/external root \"flarum.core.compat['common/helpers/textContrastClass']\"","webpack://@yippy/auth-ldap/./src/admin/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/models/Group'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/textContrastClass'];","import app from 'flarum/app';\r\nimport ExtensionPage from 'flarum/admin/components/ExtensionPage';\r\nimport Button from 'flarum/common/components/Button';\r\nimport Group from 'flarum/common/models/Group';\r\nimport textContrastClass from 'flarum/common/helpers/textContrastClass';\r\n\r\ninterface LdapDomain {\r\n  host: string\r\n  port: number\r\n  version: number\r\n  baseDN: string\r\n  filter: string\r\n  admin: {\r\n    dn: string\r\n    password: string\r\n  }\r\n  searchFields: string[]\r\n  user: {\r\n    username: string\r\n    mail: string\r\n    nicknameFields: string[]\r\n  }\r\n  permission: {\r\n    groups: string[]\r\n  }\r\n  followReferrals: boolean\r\n  useSSL: boolean\r\n  useTLS: boolean\r\n  isEnabled: boolean\r\n}\r\n\r\ninterface PermissionGroup {\r\n  id: number\r\n  text: string\r\n  color: string\r\n  icon: string\r\n  isHidden: boolean\r\n  namePlural: string\r\n  nameSingular: string\r\n}\r\nconst settingsPrefix = 'yippy-auth-ldap';\r\nconst translationPrefix = 'yippy-auth-ldap.admin.settings.';\r\nconst ldapDomainsSettingKey = settingsPrefix+'.domains';\r\nconst ldapNicknameAvailableFields = [\r\n  // Full Name\r\n  'cn',\r\n  'commonName',\r\n  'displayName',\r\n  'name',\r\n  // Title\r\n  'title',\r\n  'personalTitle',\r\n  // First Name\r\n  'givenName',\r\n  // Middle Initial\r\n  'initials',\r\n  // Last Name\r\n  'sn',\r\n  'surname',\r\n];\r\nconst ldapEmailAvailableFields = [\r\n  // Email Address\r\n  'mail',\r\n  'rfc822Mailbox ',\r\n];\r\nconst ldapUsernameAvailableFields = [\r\n  // User ID\r\n  'mailNickname',\r\n  'sAMAccountName',\r\n  'uid',\r\n  'userPrincipalName',\r\n];\r\nconst ldapSearchUsernameAvailableFields = [\r\n  // User ID\r\n  'mailNickname',\r\n  'sAMAccountName',\r\n  'uid',\r\n  'userPrincipalName',\r\n  // Email Address\r\n  'mail',\r\n  'rfc822Mailbox ',\r\n];\r\n\r\nconst _sort = (list = [], selected = []) => {\r\n  // Must have the list sorted first before options are created, due to Select2 will sort array based on the list order.\r\n  for (let i = 0; i < selected.length; i++) {\r\n    const foundIndex = list.indexOf(selected[i]);\r\n    if (foundIndex > 0) {\r\n      list.splice(i, 0, list.splice(list.indexOf(selected[i]), 1)[0]);\r\n    }\r\n  }\r\n  return list;\r\n}\r\n\r\napp.initializers.add(settingsPrefix, function(app) {\r\n  app.extensionData\r\n    .for(settingsPrefix)\r\n    .registerSetting(\r\n      {\r\n        setting: settingsPrefix + '.method_name',\r\n        label: app.translator.trans(translationPrefix + 'method_name'),\r\n        type: 'text',\r\n        placeholder: 'YunoHost',\r\n      }\r\n    )\r\n    .registerSetting(\r\n      function (this: ExtensionPage) {\r\n        let ldapDomains: LdapDomain[];\r\n\r\n        try {\r\n          ldapDomains = JSON.parse(this.setting(ldapDomainsSettingKey)());\r\n        } catch (e) {\r\n          // do nothing, we'll reset to something usable\r\n        }\r\n\r\n        // @ts-ignore variable used before assignment, it's fine\r\n        if (!Array.isArray(ldapDomains)) {\r\n          ldapDomains = [];\r\n        }\r\n\r\n        // Get all available permission groups\r\n        let permissionGroupList = app.store.all('groups').filter((group) => {\r\n          if (group.id() === Group.MEMBER_ID || group.id() === Group.GUEST_ID) {\r\n            // Do not suggest \"virtual\" groups\r\n            return false;\r\n          } else {\r\n            return true;\r\n          }\r\n        });\r\n        let allPermissionGroupList:PermissionGroup[] = [];\r\n        permissionGroupList.forEach((permissionGroup) => {\r\n          let modelPermissionGroup: PermissionGroup[] = {\r\n            id: permissionGroup.data.id,\r\n            text: permissionGroup.data.attributes.namePlural,\r\n            color: permissionGroup.data.attributes.color,\r\n            icon: permissionGroup.data.attributes.icon,\r\n            isHidden: permissionGroup.data.attributes.isHidden,\r\n            namePlural: permissionGroup.data.attributes.namePlural,\r\n            nameSingular: permissionGroup.data.attributes.nameSingular\r\n          };\r\n          allPermissionGroupList.push(modelPermissionGroup);\r\n        })\r\n        let availablePermissionGroupList = {results: allPermissionGroupList};\r\n        return m('.Form-group', [\r\n          m('label', app.translator.trans(translationPrefix + 'domains.title')),\r\n          m('.helpText', app.translator.trans(translationPrefix + 'domains.description')),\r\n          m('table', {style:'table-layout:fixed;color:#000000;'}, [\r\n            m('tbody', [\r\n              ldapDomains.map((rule, index) => m('table', {\r\n                border: '1px solid black',\r\n                'style': rule.isEnabled || rule.isEnabled == undefined ?'background-color: #ffffff':'background-color: #F88379',\r\n              }, [\r\n                m('thead', m('tr', [\r\n                  m('th', app.translator.trans(translationPrefix + 'domains.banner', {index: index+1, isEnabled: rule.isEnabled || rule.isEnabled == undefined ? app.translator.trans(translationPrefix + 'domains.is_enabled.enabled'): app.translator.trans(translationPrefix + 'domains.is_enabled.disabled')})),\r\n                  m('th', Button.component({\r\n                    className: 'Button Button--icon',\r\n                    icon: 'fas fa-times',\r\n                    onclick: () => {\r\n                      ldapDomains.splice(index, 1);\r\n                        this.setting(ldapDomainsSettingKey)(ldapDomains.length > 0 ? JSON.stringify(ldapDomains) : null);\r\n                    },\r\n                  })\r\n                  )\r\n                ])),\r\n                m('tbody', [\r\n                  m('table', [\r\n                    m('thead', m('tr', [\r\n                      m('th', { width: '30%' }),\r\n                      m('th', { width: '70%' }),\r\n                    ])),\r\n                    m('tbody', [\r\n                      m('tr', [\r\n                        m('th', { colspan: 2 }, app.translator.trans(translationPrefix + 'domains.header.server')),\r\n                      ]),\r\n                      m('tr', [\r\n                        m('td', app.translator.trans(translationPrefix + 'domains.data.host')),\r\n                        m('td', m('input.FormControl', {\r\n                          type: 'text',\r\n                          style: \"background-color:#e8ecf2;color:#000000\",\r\n                          value: rule.host || '',\r\n                          placeholder: 'localhost',\r\n                          onchange: (event: InputEvent) => {\r\n                              rule.host = (event.target as HTMLInputElement).value;\r\n                              this.setting(ldapDomainsSettingKey)(JSON.stringify(ldapDomains));\r\n                          },\r\n                        })),\r\n                      ]),\r\n                      m('tr', [\r\n                        m('td', { colspan: 2, class: 'helpText'}, app.translator.trans(translationPrefix + 'domains.data.host_help')),\r\n                      ]),\r\n                      m('tr', [\r\n                        m('td', app.translator.trans(translationPrefix + 'domains.data.port')),\r\n                        m('td', m('input.FormControl', {\r\n                          type: 'number',\r\n                          style: \"background-color:#e8ecf2;color:#000000\",\r\n                          value: rule.port || 389,\r\n                          placeholder: '389',\r\n                          onchange: (event: InputEvent) => {\r\n                              rule.port = Number((event.target as HTMLInputElement).value);\r\n                              this.setting(ldapDomainsSettingKey)(JSON.stringify(ldapDomains));\r\n                          },\r\n                        })),\r\n                      ]),\r\n                      m('tr', [\r\n                        m('td', { colspan: 2, class: 'helpText'}, app.translator.trans(translationPrefix + 'domains.data.port_help')),\r\n                      ]),\r\n                      m('tr', [\r\n                        m('td', app.translator.trans(translationPrefix + 'domains.data.version')),\r\n                        m('td', m('input.FormControl', {\r\n                          type: 'number',\r\n                          style: \"background-color:#e8ecf2;color:#000000\",\r\n                          value: rule.version || 3,\r\n                          placeholder: '3',\r\n                          onchange: (event: InputEvent) => {\r\n                            rule.version = Number((event.target as HTMLInputElement).value);\r\n                              this.setting(ldapDomainsSettingKey)(JSON.stringify(ldapDomains));\r\n                          },\r\n                        })),\r\n                      ]),\r\n                      m('tr', [\r\n                        m('td', { colspan: 2, class: 'helpText'}, app.translator.trans(translationPrefix + 'domains.data.version_help')),\r\n                      ]),\r\n                      m('tr', [\r\n                        m('td', app.translator.trans(translationPrefix + 'domains.data.base_dn')),\r\n                        m('td', m('input.FormControl', {\r\n                          type: 'text',\r\n                          style: \"background-color:#e8ecf2;color:#000000\",\r\n                          value: rule.baseDN || '',\r\n                          placeholder: 'ou=users,dc=yunohost,dc=org',\r\n                          onchange: (event: InputEvent) => {\r\n                              rule.baseDN = (event.target as HTMLInputElement).value;\r\n                              this.setting(ldapDomainsSettingKey)(JSON.stringify(ldapDomains));\r\n                          },\r\n                        })),\r\n                      ]),\r\n                      m('tr', [\r\n                        m('td', { colspan: 2, class: 'helpText'}, app.translator.trans(translationPrefix + 'domains.data.base_dn_help')),\r\n                      ]),\r\n                      m('tr', [\r\n                        m('td', app.translator.trans(translationPrefix + 'domains.data.filter')),\r\n                        m('td', m('input.FormControl', {\r\n                          type: 'text',\r\n                          style: \"background-color:#e8ecf2;color:#000000\",\r\n                          value: rule.filter || '',\r\n                          placeholder: '(&(objectClass=posixAccount)(permission=cn=flarum.main,ou=permission,dc=yunohost,dc=org)',\r\n                          onchange: (event: InputEvent) => {\r\n                              rule.filter = (event.target as HTMLInputElement).value;\r\n                              this.setting(ldapDomainsSettingKey)(JSON.stringify(ldapDomains));\r\n                          },\r\n                        })),\r\n                      ]),\r\n                      m('tr', [\r\n                        m('td', { colspan: 2, class: 'helpText'}, app.translator.trans(translationPrefix + 'domains.data.filter_help')),\r\n                      ]),\r\n                      m('tr', [\r\n                        m('td', app.translator.trans(translationPrefix + 'domains.data.follow_referrals')),\r\n                        m('td', m('input', {\r\n                          type: 'checkbox',\r\n                          checked: rule.followReferrals,\r\n                          onchange: (event: InputEvent) => {\r\n                              rule.followReferrals = (event.target as HTMLInputElement).checked;\r\n                              this.setting(ldapDomainsSettingKey)(JSON.stringify(ldapDomains));\r\n                          },\r\n                        })),\r\n                      ]),\r\n                      m('tr', [\r\n                        m('td', app.translator.trans(translationPrefix + 'domains.data.use_ssl')),\r\n                        m('td', m('input', {\r\n                          type: 'checkbox',\r\n                          checked: rule.useSSL,\r\n                          onchange: (event: InputEvent) => {\r\n                              rule.useSSL = (event.target as HTMLInputElement).checked;\r\n                              this.setting(ldapDomainsSettingKey)(JSON.stringify(ldapDomains));\r\n                          },\r\n                        })),\r\n                      ]),\r\n                      m('tr', [\r\n                        m('td', app.translator.trans(translationPrefix + 'domains.data.use_tls')),\r\n                        m('td', m('input', {\r\n                          type: 'checkbox',\r\n                          checked: rule.useTLS,\r\n                          onchange: (event: InputEvent) => {\r\n                              rule.useTLS = (event.target as HTMLInputElement).checked;\r\n                              this.setting(ldapDomainsSettingKey)(JSON.stringify(ldapDomains));\r\n                          },\r\n                        })),\r\n                      ]),\r\n                      m('tr', [\r\n                        m('th', { colspan: 2 }, app.translator.trans(translationPrefix + 'domains.header.admin')),\r\n                      ]),\r\n                      m('tr', [\r\n                        m('td', app.translator.trans(translationPrefix + 'domains.data.admin_dn')),\r\n                        m('td', m('input.FormControl', {\r\n                          type: 'text',\r\n                          style: \"background-color:#e8ecf2;color:#000000\",\r\n                          value: rule.admin.dn || '',\r\n                          placeholder: 'cn=admin,dc=yunohost,dc=org',\r\n                          onchange: (event: InputEvent) => {\r\n                              rule.admin.dn = (event.target as HTMLInputElement).value;\r\n                              this.setting(ldapDomainsSettingKey)(JSON.stringify(ldapDomains));\r\n                          },\r\n                        })),\r\n                      ]),\r\n                      m('tr', [\r\n                        m('td', { colspan: 2, class: 'helpText'}, app.translator.trans(translationPrefix + 'domains.data.admin_dn_help')),\r\n                      ]),\r\n                      m('tr', [\r\n                        m('td', app.translator.trans(translationPrefix + 'domains.data.admin_password')),\r\n                        m('td', m('input.FormControl', {\r\n                          type: 'text',\r\n                          style: \"background-color:#e8ecf2;color:#000000\",\r\n                          value: rule.admin.password || '',\r\n                          placeholder: 'password',\r\n                          onchange: (event: InputEvent) => {\r\n                              rule.admin.password = (event.target as HTMLInputElement).value;\r\n                              this.setting(ldapDomainsSettingKey)(JSON.stringify(ldapDomains));\r\n                          },\r\n                        })),\r\n                      ]),\r\n                      m('tr', [\r\n                        m('td', { colspan: 2, class: 'helpText'}, app.translator.trans(translationPrefix + 'domains.data.admin_password_help')),\r\n                      ]),\r\n                      m('tr', [\r\n                        m('th', { colspan: 2 }, app.translator.trans(translationPrefix + 'domains.header.search_fields')),\r\n                      ]),\r\n                      m('tr', [\r\n                        m('td', { colspan: 2 }, app.translator.trans(translationPrefix + 'domains.header.search_fields_description')),\r\n                      ]),\r\n                      m('tr', [\r\n                        m('td', app.translator.trans(translationPrefix + 'domains.data.search_user_fields')),\r\n                        m('td',\r\n                          m('select', {\r\n                            oncreate: ({dom}) => $(dom).select2({\r\n                              width: '100%',\r\n                              multiple: true,\r\n                              data: _sort(ldapSearchUsernameAvailableFields, rule.searchFields),\r\n                              templateResult: (value) => {\r\n                                var output = '<span style=\"color:#000000;\">';\r\n                                output += value.text+\"</span>\";\r\n                                return output;\r\n                              },\r\n                              escapeMarkup: (m) => {\r\n                                return m;\r\n                              },\r\n                            }).on(\"change\", function() {\r\n                              this.dispatchEvent(new CustomEvent('edit', {\"detail\": $(this).val()}));\r\n                            }).on('select2:select', function(e){\r\n                              var id = e.params.data.id;\r\n                              var option = $(e.target).children('[value='+id+']');\r\n                              option.detach();\r\n                              $(e.target).append(option).change();\r\n                            }).val(rule.searchFields || []).trigger(\"change\"),\r\n                            onedit: (event: InputEvent) => {\r\n                              rule.searchFields = event.detail;\r\n                              this.setting(ldapDomainsSettingKey)(JSON.stringify(ldapDomains));\r\n                            }\r\n                          })\r\n                        )\r\n                      ]),\r\n                      m('tr', [\r\n                        m('td', { colspan: 2, class: 'helpText'}, app.translator.trans(translationPrefix + 'domains.data.search_user_fields_help')),\r\n                      ]),\r\n                      m('tr', [\r\n                        m('th', { colspan: 2 }, app.translator.trans(translationPrefix + 'domains.header.flarum')),\r\n                      ]),\r\n                      m('tr', [\r\n                        m('td', { colspan: 2 }, app.translator.trans(translationPrefix + 'domains.header.flarum_description')),\r\n                      ]),\r\n                      m('tr', [\r\n                        m('td', app.translator.trans(translationPrefix + 'domains.data.user_username')),\r\n                        m('td',\r\n                          m('select', {\r\n                            value: rule.user.username || '',\r\n                            oncreate: ({dom}) => $(dom).select2({\r\n                              width: '100%',\r\n                              allowClear: true,\r\n                              placeholder: '',\r\n                              templateResult: (value) => {\r\n                                var output = '<span style=\"color:#000000;\">';\r\n                                output += value.text+\"</span>\";\r\n                                return output;\r\n                              },\r\n                              escapeMarkup: (m) => {\r\n                                return m;\r\n                              },\r\n                            }).on(\"change\", function() {\r\n                              this.dispatchEvent(new CustomEvent('edit', {\"detail\": this.value}));\r\n                            }),\r\n                            onedit: (event: InputEvent) => {\r\n                              rule.user.username = event.detail;\r\n                              this.setting(ldapDomainsSettingKey)(JSON.stringify(ldapDomains));\r\n                            }\r\n                          },\r\n                            [\r\n                              ldapUsernameAvailableFields.map(field => [\r\n                                m('option', { value: field }, field)\r\n                              ])\r\n                            ]\r\n                          )\r\n                        )\r\n                      ]),\r\n                      m('tr', [\r\n                        m('td', app.translator.trans(translationPrefix + 'domains.data.user_mail')),\r\n                        m('td',\r\n                          m('select', {\r\n                            value: rule.user.mail || '',\r\n                            oncreate: ({dom}) => $(dom).select2({\r\n                              width: '100%',\r\n                              allowClear: true,\r\n                              placeholder: '',\r\n                              templateResult: (value) => {\r\n                                var output = '<span style=\"color:#000000;\">';\r\n                                output += value.text+\"</span>\";\r\n                                return output;\r\n                              },\r\n                              escapeMarkup: (m) => {\r\n                                return m;\r\n                              },\r\n                            }).on(\"change\", function() {\r\n                              this.dispatchEvent(new CustomEvent('edit', {\"detail\": this.value}));\r\n                            }),\r\n                            onedit: (event: InputEvent) => {\r\n                              rule.user.mail = event.detail;\r\n                              this.setting(ldapDomainsSettingKey)(JSON.stringify(ldapDomains));\r\n                            }\r\n                          },\r\n                            [\r\n                              ldapEmailAvailableFields.map(field => [\r\n                                m('option', { value: field }, field)\r\n                              ])\r\n                            ]\r\n                          )\r\n                        )\r\n                      ]),\r\n                      m('tr', [\r\n                        m('td', { colspan: 2, class: 'helpText'}, app.translator.trans(translationPrefix + 'domains.data.user_mail_help')),\r\n                      ]),\r\n                      m('tr', [\r\n                        m('td', app.translator.trans(translationPrefix + 'domains.data.user_nickname_fields')),\r\n                        m('td',\r\n                          m('select', {\r\n                            oncreate: ({dom}) => $(dom).select2({\r\n                              width: '100%',\r\n                              multiple: true,\r\n                              data: _sort(ldapNicknameAvailableFields, rule.user.nicknameFields),\r\n                              templateResult: (value) => {\r\n                                var output = '<span style=\"color:#000000;\">';\r\n                                output += value.text+\"</span>\";\r\n                                return output;\r\n                              },\r\n                              escapeMarkup: (m) => {\r\n                                return m;\r\n                              },\r\n                            }).on(\"change\", function() {\r\n                              this.dispatchEvent(new CustomEvent('edit', {\"detail\": $(this).val()}));\r\n                            }).on('select2:select', function(e){\r\n                              var id = e.params.data.id;\r\n                              var option = $(e.target).children('[value='+id+']');\r\n                              option.detach();\r\n                              $(e.target).append(option).change();\r\n                            }).val(rule.user.nicknameFields || []).trigger(\"change\"),\r\n                            onedit: (event: InputEvent) => {\r\n                              rule.user.nicknameFields = event.detail;\r\n                              this.setting(ldapDomainsSettingKey)(JSON.stringify(ldapDomains));\r\n                            }\r\n                          })\r\n                        )\r\n                      ]),\r\n                      m('tr', [\r\n                        m('td', { colspan: 2, class: 'helpText'}, app.translator.trans(translationPrefix + 'domains.data.user_nickname_fields_help')),\r\n                      ]),\r\n                      m('tr', [\r\n                        m('td', app.translator.trans(translationPrefix + 'domains.data.permission_groups')),\r\n                        m('td',\r\n                          m('select', {\r\n                            oncreate: ({dom}) => $(dom).select2({\r\n                              templateResult: (value) => {\r\n                                var output = '<span style=\"color:#000000;\">'\r\n                                if(value.icon){\r\n                                  output += '<i class=\"fa fa-lg '+value.icon.toLowerCase()+'\"></i> ';\r\n                                }\r\n                                output += value.text+\"</span>\";\r\n                                return output;\r\n                              },\r\n                              templateSelection: (value) => {\r\n                                var output = '<span style=\"padding: 5px 10px 5px 10px; background-color:'+value.color+';\" class=\"'+textContrastClass(value.color)+'\">'\r\n                                if(value.icon){\r\n                                  output += '<i class=\"fa fa-lg '+value.icon.toLowerCase()+'\"></i> ';\r\n                                }\r\n                                output += value.text+\"</span>\";\r\n                                return output;\r\n                              },\r\n                              escapeMarkup: (m) => {\r\n                                return m;\r\n                              },\r\n                              width: '100%',\r\n                              multiple: true,\r\n                              data:  $.map(availablePermissionGroupList, function (obj) {\r\n                              obj.text = obj.text || obj.name; // replace name with the property used for the text\r\n                              return obj;\r\n                            })}).on(\"change\", function() {\r\n                              this.dispatchEvent(new CustomEvent('edit', {\"detail\": $(this).val()}));\r\n                            }).on('select2:select', function(e){\r\n                              var id = e.params.data.id;\r\n                              var option = $(e.target).children('[value='+id+']');\r\n                              option.detach();\r\n                              $(e.target).append(option).change();\r\n                            }).val((rule.permission && rule.permission.groups) || []).trigger(\"change\"),\r\n                            onedit: (event: InputEvent) => {\r\n                              if (rule.permission) {\r\n                                rule.permission.groups = event.detail;\r\n                              } else {\r\n                                rule.permission = {groups: event.detail};\r\n                              }\r\n                              this.setting(ldapDomainsSettingKey)(JSON.stringify(ldapDomains));\r\n                            }\r\n                          })\r\n                        )\r\n                      ]),\r\n                      m('tr', [\r\n                        m('td', { colspan: 2, class: 'helpText'}, app.translator.trans(translationPrefix + 'domains.data.permission_groups_help')),\r\n                      ]),\r\n                      m('tr', [\r\n                        m('td', app.translator.trans(translationPrefix + 'domains.data.is_enabled')),\r\n                        m('td', m('input', {\r\n                          type: 'checkbox',\r\n                          checked: rule.isEnabled || rule.isEnabled == undefined,\r\n                          onchange: (event: InputEvent) => {\r\n                              rule.isEnabled = (event.target as HTMLInputElement).checked;\r\n                              this.setting(ldapDomainsSettingKey)(JSON.stringify(ldapDomains));\r\n                          },\r\n                        })),\r\n                      ])\r\n                    ])\r\n                  ])\r\n                ])\r\n              ])),\r\n              m('tr', m('td', Button.component({\r\n                className: 'Button Button--block',\r\n                onclick: () => {\r\n                  ldapDomains.push({\r\n                    host: '',\r\n                    port: 389,\r\n                    version: 3,\r\n                    baseDN: '',\r\n                    filter: '',\r\n                    admin: {\r\n                      dn: '',\r\n                      password: '',\r\n                    },\r\n                    searchFields: [],\r\n                    user: {\r\n                      username: '',\r\n                      mail: '',\r\n                      nicknameFields: [],\r\n                    },\r\n                    permission: {\r\n                      groups: [],\r\n                    },\r\n                    followReferrals: false,\r\n                    useSSL: false,\r\n                    useTLS: false,\r\n                    isEnabled: true\r\n                  });\r\n\r\n                  this.setting(ldapDomainsSettingKey)(JSON.stringify(ldapDomains));\r\n                },\r\n              }, app.translator.trans(translationPrefix + 'domains.add'))))\r\n            ]),\r\n          ]),\r\n        ]);\r\n      }\r\n    )\r\n    .registerSetting(\r\n      {\r\n        setting: settingsPrefix + '.onlyUse',\r\n        label: app.translator.trans(translationPrefix + 'onlyUse'),\r\n        type: 'boolean',\r\n        default: false,\r\n      }\r\n    )\r\n    .registerSetting(\r\n      {\r\n        setting: settingsPrefix + '.display_detailed_error',\r\n        label: app.translator.trans(translationPrefix + 'display_detailed_error'),\r\n        type: 'boolean',\r\n        default: false,\r\n      }\r\n    )\r\n});\r\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","flarum","core","compat","settingsPrefix","translationPrefix","ldapDomainsSettingKey","ldapNicknameAvailableFields","ldapEmailAvailableFields","ldapUsernameAvailableFields","ldapSearchUsernameAvailableFields","_sort","list","selected","i","length","indexOf","splice","app","add","extensionData","registerSetting","setting","label","translator","trans","type","placeholder","ldapDomains","_this","JSON","parse","this","e","Array","isArray","permissionGroupList","store","all","filter","group","id","Group","allPermissionGroupList","forEach","permissionGroup","modelPermissionGroup","data","text","attributes","namePlural","color","icon","isHidden","nameSingular","push","availablePermissionGroupList","results","m","style","map","rule","index","border","isEnabled","undefined","Button","className","onclick","stringify","width","colspan","value","host","onchange","event","target","class","port","Number","version","baseDN","checked","followReferrals","useSSL","useTLS","admin","dn","password","oncreate","_ref","dom","$","select2","multiple","searchFields","templateResult","escapeMarkup","on","dispatchEvent","CustomEvent","val","params","option","children","detach","append","change","trigger","onedit","detail","user","username","_ref2","allowClear","field","mail","_ref3","_ref4","nicknameFields","_ref5","output","toLowerCase","templateSelection","textContrastClass","name","permission","groups","default"],"sourceRoot":""}