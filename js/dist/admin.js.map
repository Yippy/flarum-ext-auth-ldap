{"version":3,"file":"admin.js","mappings":"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","sources":["webpack://@tituspijean/auth-ldap/webpack/bootstrap","webpack://@tituspijean/auth-ldap/webpack/runtime/compat get default export","webpack://@tituspijean/auth-ldap/webpack/runtime/define property getters","webpack://@tituspijean/auth-ldap/webpack/runtime/hasOwnProperty shorthand","webpack://@tituspijean/auth-ldap/webpack/runtime/make namespace object","webpack://@tituspijean/auth-ldap/external root \"flarum.core.compat['app']\"","webpack://@tituspijean/auth-ldap/external root \"flarum.core.compat['common/components/Button']\"","webpack://@tituspijean/auth-ldap/./src/admin/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","import app from 'flarum/app';\r\nimport ExtensionPage from 'flarum/admin/components/ExtensionPage';\r\nimport Button from 'flarum/common/components/Button';\r\n\r\ninterface LdapDomain {\r\n  host: string\r\n  port: number\r\n  baseDN: string\r\n  filter: string\r\n  admin: {\r\n    dn: string\r\n    password: string\r\n  }\r\n  searchFields: string[]\r\n  user: {\r\n    username: string\r\n    mail: string\r\n    nicknames: string[]\r\n  }\r\n  followReferrals: boolean\r\n  useSSL: boolean\r\n  useTLS: boolean\r\n}\r\nconst settingsPrefix = 'tituspijean-auth-ldap.';\r\nconst translationPrefix = 'tituspijean-auth-ldap.admin.settings.';\r\nconst ldapDomainsSettingKey = settingsPrefix+'domains';\r\nconst ldapNicknameAvailableFields = [\r\n  // Full Name\r\n  'cn',\r\n  'commonname',\r\n  'displayname',\r\n  'name',\r\n  // First Name\r\n  'givenname',\r\n  // Middle Initial\r\n  'initials',\r\n  // Last Name\r\n  'sn',\r\n  'surname',\r\n  // Title\r\n  'title',\r\n];\r\nconst ldapEmailAvailableFields = [\r\n  // Email Address\r\n  'mail',\r\n  'rfc822mailbox',\r\n];\r\nconst ldapUsernameAvailableFields = [\r\n  // User ID\r\n  'mailnickname',\r\n  'samaccountname',\r\n  'uid',\r\n  'userprincipalname',\r\n];\r\nconst ldapSearchUsernameAvailableFields = [\r\n  // User ID\r\n  'mailnickname',\r\n  'samaccountname',\r\n  'uid',\r\n  'userprincipalname',\r\n  // Email Address\r\n  'mail',\r\n  'rfc822mailbox',\r\n];\r\n\r\nconst _sort = (list = [], selected = []) => {\r\n  // Must have the list sorted first before options are created, due to Select2 will sort array based on the list order.\r\n  for (let i = 0; i < selected.length; i++) {\r\n    const foundIndex = list.indexOf(selected[i]);\r\n    if (foundIndex > 0) {\r\n      list.splice(i, 0, list.splice(list.indexOf(selected[i]), 1)[0]);\r\n    }\r\n  }\r\n  return list;\r\n}\r\n\r\napp.initializers.add('tituspijean-auth-ldap', function(app) {\r\n  app.extensionData\r\n    .for('tituspijean-auth-ldap')\r\n    .registerSetting(\r\n      {\r\n        setting: settingsPrefix + 'method_name',\r\n        label: app.translator.trans(translationPrefix + 'method_name'),\r\n        type: 'text',\r\n        placeholder: 'YunoHost',\r\n      }\r\n    )\r\n    .registerSetting(\r\n      function (this: ExtensionPage) {\r\n        let ldapDomains: LdapDomain[];\r\n\r\n        try {\r\n          ldapDomains = JSON.parse(this.setting(ldapDomainsSettingKey)());\r\n        } catch (e) {\r\n          // do nothing, we'll reset to something usable\r\n        }\r\n\r\n        // @ts-ignore variable used before assignment, it's fine\r\n        if (!Array.isArray(ldapDomains)) {\r\n          ldapDomains = [];\r\n        }\r\n\r\n        return m('.Form-group', [\r\n          m('label', app.translator.trans(translationPrefix + 'domains.title')),\r\n          m('.helpText', app.translator.trans(translationPrefix + 'domains.description')),\r\n          m('table', {style:'table-layout:fixed'}, [\r\n            m('tbody', [\r\n              ldapDomains.map((rule, index) => m('table', {\r\n                border: '1px solid black',\r\n              }, [\r\n                m('thead', m('tr', [\r\n                  m('th', app.translator.trans(translationPrefix + 'domains.banner', {index: index+1})),\r\n                  m('th', Button.component({\r\n                    className: 'Button Button--icon',\r\n                    icon: 'fas fa-times',\r\n                    onclick: () => {\r\n                      ldapDomains.splice(index, 1);\r\n                        this.setting(ldapDomainsSettingKey)(ldapDomains.length > 0 ? JSON.stringify(ldapDomains) : null);\r\n                    },\r\n                  })\r\n                  )\r\n                ])),\r\n                m('tbody', [\r\n                  m('table', [\r\n                    m('thead', m('tr', [\r\n                      m('th', { width: '30%' }),\r\n                      m('th', { width: '70%' }),\r\n                    ])),\r\n                    m('tbody', [\r\n                      m('tr', [\r\n                        m('th', { colspan: 2 }, app.translator.trans(translationPrefix + 'domains.header.server')),\r\n                      ]),\r\n                      m('tr', [\r\n                        m('td', app.translator.trans(translationPrefix + 'domains.data.host')),\r\n                        m('td', m('input.FormControl', {\r\n                          type: 'text',\r\n                          value: rule.host || '',\r\n                          placeholder: 'localhost',\r\n                          onchange: (event: InputEvent) => {\r\n                              rule.host = (event.target as HTMLInputElement).value;\r\n                              this.setting(ldapDomainsSettingKey)(JSON.stringify(ldapDomains));\r\n                          },\r\n                        })),\r\n                      ]),\r\n                      m('tr', [\r\n                        m('td', { colspan: 2, class: 'helpText'}, app.translator.trans(translationPrefix + 'domains.data.host_help')),\r\n                      ]),\r\n                      m('tr', [\r\n                        m('td', app.translator.trans(translationPrefix + 'domains.data.port')),\r\n                        m('td', m('input.FormControl', {\r\n                          type: 'text',\r\n                          value: rule.port || '',\r\n                          placeholder: '389',\r\n                          onchange: (event: InputEvent) => {\r\n                              rule.port = (event.target as HTMLInputElement).value;\r\n                              this.setting(ldapDomainsSettingKey)(JSON.stringify(ldapDomains));\r\n                          },\r\n                        })),\r\n                      ]),\r\n                      m('tr', [\r\n                        m('td', app.translator.trans(translationPrefix + 'domains.data.base_dn')),\r\n                        m('td', m('input.FormControl', {\r\n                          type: 'text',\r\n                          value: rule.baseDN || '',\r\n                          placeholder: 'ou=users,dc=yunohost,dc=org',\r\n                          onchange: (event: InputEvent) => {\r\n                              rule.baseDN = (event.target as HTMLInputElement).value;\r\n                              this.setting(ldapDomainsSettingKey)(JSON.stringify(ldapDomains));\r\n                          },\r\n                        })),\r\n                      ]),\r\n                      m('tr', [\r\n                        m('td', { colspan: 2, class: 'helpText'}, app.translator.trans(translationPrefix + 'domains.data.base_dn_help')),\r\n                      ]),\r\n                      m('tr', [\r\n                        m('td', app.translator.trans(translationPrefix + 'domains.data.filter')),\r\n                        m('td', m('input.FormControl', {\r\n                          type: 'text',\r\n                          value: rule.filter || '',\r\n                          placeholder: '(&(objectClass=posixAccount)(permission=cn=flarum.main,ou=permission,dc=yunohost,dc=org)',\r\n                          onchange: (event: InputEvent) => {\r\n                              rule.filter = (event.target as HTMLInputElement).value;\r\n                              this.setting(ldapDomainsSettingKey)(JSON.stringify(ldapDomains));\r\n                          },\r\n                        })),\r\n                      ]),\r\n                      m('tr', [\r\n                        m('td', { colspan: 2, class: 'helpText'}, app.translator.trans(translationPrefix + 'domains.data.filter_help')),\r\n                      ]),\r\n                      m('tr', [\r\n                        m('td', app.translator.trans(translationPrefix + 'domains.data.follow_referrals')),\r\n                        m('td', m('input', {\r\n                          type: 'checkbox',\r\n                          checked: rule.followReferrals,\r\n                          onchange: (event: InputEvent) => {\r\n                              rule.followReferrals = (event.target as HTMLInputElement).checked;\r\n                              this.setting(ldapDomainsSettingKey)(JSON.stringify(ldapDomains));\r\n                          },\r\n                        })),\r\n                      ]),\r\n                      m('tr', [\r\n                        m('td', app.translator.trans(translationPrefix + 'domains.data.use_ssl')),\r\n                        m('td', m('input', {\r\n                          type: 'checkbox',\r\n                          checked: rule.useSSL,\r\n                          onchange: (event: InputEvent) => {\r\n                              rule.useSSL = (event.target as HTMLInputElement).checked;\r\n                              this.setting(ldapDomainsSettingKey)(JSON.stringify(ldapDomains));\r\n                          },\r\n                        })),\r\n                      ]),\r\n                      m('tr', [\r\n                        m('td', app.translator.trans(translationPrefix + 'domains.data.use_tls')),\r\n                        m('td', m('input', {\r\n                          type: 'checkbox',\r\n                          checked: rule.useTLS,\r\n                          onchange: (event: InputEvent) => {\r\n                              rule.useTLS = (event.target as HTMLInputElement).checked;\r\n                              this.setting(ldapDomainsSettingKey)(JSON.stringify(ldapDomains));\r\n                          },\r\n                        })),\r\n                      ]),\r\n                      m('tr', [\r\n                        m('th', { colspan: 2 }, app.translator.trans(translationPrefix + 'domains.header.admin')),\r\n                      ]),\r\n                      m('tr', [\r\n                        m('td', app.translator.trans(translationPrefix + 'domains.data.admin_dn')),\r\n                        m('td', m('input.FormControl', {\r\n                          type: 'text',\r\n                          value: rule.admin.dn || '',\r\n                          placeholder: 'cn=admin,dc=yunohost,dc=org',\r\n                          onchange: (event: InputEvent) => {\r\n                              rule.admin.dn = (event.target as HTMLInputElement).value;\r\n                              this.setting(ldapDomainsSettingKey)(JSON.stringify(ldapDomains));\r\n                          },\r\n                        })),\r\n                      ]),\r\n                      m('tr', [\r\n                        m('td', { colspan: 2, class: 'helpText'}, app.translator.trans(translationPrefix + 'domains.data.admin_dn_help')),\r\n                      ]),\r\n                      m('tr', [\r\n                        m('td', app.translator.trans(translationPrefix + 'domains.data.admin_password')),\r\n                        m('td', m('input.FormControl', {\r\n                          type: 'text',\r\n                          value: rule.admin.password || '',\r\n                          placeholder: 'password',\r\n                          onchange: (event: InputEvent) => {\r\n                              rule.admin.password = (event.target as HTMLInputElement).value;\r\n                              this.setting(ldapDomainsSettingKey)(JSON.stringify(ldapDomains));\r\n                          },\r\n                        })),\r\n                      ]),\r\n                      m('tr', [\r\n                        m('td', { colspan: 2, class: 'helpText'}, app.translator.trans(translationPrefix + 'domains.data.admin_password_help')),\r\n                      ]),\r\n                      m('tr', [\r\n                        m('th', { colspan: 2 }, app.translator.trans(translationPrefix + 'domains.header.search_fields')),\r\n                      ]),\r\n                      m('tr', [\r\n                        m('td', { colspan: 2 }, app.translator.trans(translationPrefix + 'domains.header.search_fields_description')),\r\n                      ]),\r\n                      m('tr', [\r\n                        m('td', app.translator.trans(translationPrefix + 'domains.data.search_user_fields')),\r\n                        m('td',\r\n                          m('select', {\r\n                            oncreate: ({dom}) => $(dom).select2({ width: '100%', multiple: true }).on(\"change\", function() {\r\n                              this.dispatchEvent(new CustomEvent('edit', {\"detail\": $(this).val()}));\r\n                            }).on('select2:select', function(e){\r\n                              var id = e.params.data.id;\r\n                              var option = $(e.target).children('[value='+id+']');\r\n                              option.detach();\r\n                              $(e.target).append(option).change();\r\n                            }).val(rule.searchFields || []).trigger(\"change\"),\r\n                            onedit: (event: InputEvent) => {\r\n                              rule.searchFields = event.detail;\r\n                              this.setting(ldapDomainsSettingKey)(JSON.stringify(ldapDomains));\r\n                            }\r\n                          }, [\r\n                            _sort(ldapSearchUsernameAvailableFields, rule.searchFields).map(field => [\r\n                              m('option', { value: field }, field)\r\n                            ])\r\n                          ])\r\n                        )\r\n                      ]),\r\n                      m('tr', [\r\n                        m('td', { colspan: 2, class: 'helpText'}, app.translator.trans(translationPrefix + 'domains.data.search_user_fields_help')),\r\n                      ]),\r\n                      m('tr', [\r\n                        m('th', { colspan: 2 }, app.translator.trans(translationPrefix + 'domains.header.flarum')),\r\n                      ]),\r\n                      m('tr', [\r\n                        m('td', { colspan: 2 }, app.translator.trans(translationPrefix + 'domains.header.flarum_description')),\r\n                      ]),\r\n                      m('tr', [\r\n                        m('td', app.translator.trans(translationPrefix + 'domains.data.user_username')),\r\n                        m('td',\r\n                          m('select', {\r\n                            value: rule.user.username || '',\r\n                            oncreate: ({dom}) => $(dom).select2({ width: '100%', allowClear: true, placeholder: '' }).on(\"change\", function() {\r\n                              this.dispatchEvent(new CustomEvent('edit', {\"detail\": this.value}));\r\n                            }),\r\n                            onedit: (event: InputEvent) => {\r\n                              rule.user.username = event.detail;\r\n                              this.setting(ldapDomainsSettingKey)(JSON.stringify(ldapDomains));\r\n                            }\r\n                          },\r\n                            [\r\n                              ldapUsernameAvailableFields.map(field => [\r\n                                m('option', { value: field }, field)\r\n                              ])\r\n                            ]\r\n                          )\r\n                        )\r\n                      ]),\r\n                      m('tr', [\r\n                        m('td', app.translator.trans(translationPrefix + 'domains.data.user_mail')),\r\n                        m('td',\r\n                          m('select', {\r\n                            value: rule.user.mail || '',\r\n                            oncreate: ({dom}) => $(dom).select2({ width: '100%', allowClear: true, placeholder: '' }).on(\"change\", function() {\r\n                              this.dispatchEvent(new CustomEvent('edit', {\"detail\": this.value}));\r\n                            }),\r\n                            onedit: (event: InputEvent) => {\r\n                              rule.user.mail = event.detail;\r\n                              this.setting(ldapDomainsSettingKey)(JSON.stringify(ldapDomains));\r\n                            }\r\n                          },\r\n                            [\r\n                              ldapEmailAvailableFields.map(field => [\r\n                                m('option', { value: field }, field)\r\n                              ])\r\n                            ]\r\n                          )\r\n                        )\r\n                      ]),\r\n                      m('tr', [\r\n                        m('td', { colspan: 2, class: 'helpText'}, app.translator.trans(translationPrefix + 'domains.data.user_mail_help')),\r\n                      ]),\r\n                      m('tr', [\r\n                        m('td', app.translator.trans(translationPrefix + 'domains.data.user_nickname')),\r\n                        m('td',\r\n                          m('select', {\r\n                            oncreate: ({dom}) => $(dom).select2({ width: '100%', multiple: true }).on(\"change\", function() {\r\n                              this.dispatchEvent(new CustomEvent('edit', {\"detail\": $(this).val()}));\r\n                            }).on('select2:select', function(e){\r\n                              var id = e.params.data.id;\r\n                              var option = $(e.target).children('[value='+id+']');\r\n                              option.detach();\r\n                              $(e.target).append(option).change();\r\n                            }).val(rule.user.nicknames || []).trigger(\"change\"),\r\n                            onedit: (event: InputEvent) => {\r\n                              rule.user.nicknames = event.detail;\r\n                              this.setting(ldapDomainsSettingKey)(JSON.stringify(ldapDomains));\r\n                            }\r\n                          },\r\n                            [\r\n                              _sort(ldapNicknameAvailableFields, rule.user.nicknames).map(field => [\r\n                                m('option', { value: field }, field)\r\n                              ])\r\n                            ]\r\n                          )\r\n                        )\r\n                      ]),\r\n                      m('tr', [\r\n                        m('td', { colspan: 2, class: 'helpText'}, app.translator.trans(translationPrefix + 'domains.data.user_nickname_help')),\r\n                      ])\r\n                    ])\r\n                  ])\r\n                ])\r\n              ])),\r\n              m('tr', m('td', Button.component({\r\n                className: 'Button Button--block',\r\n                onclick: () => {\r\n                  ldapDomains.push({\r\n                    host: '',\r\n                    port: '',\r\n                    baseDN: '',\r\n                    filter: '',\r\n                    admin: {\r\n                      dn: '',\r\n                      password: '',\r\n                    },\r\n                    searchFields: [],\r\n                    user: {\r\n                      username: '',\r\n                      mail: '',\r\n                      nicknames: [],\r\n                    },\r\n                    followReferrals: false,\r\n                    useSSL: false,\r\n                    useTLS: false\r\n                  });\r\n\r\n                  this.setting(ldapDomainsSettingKey)(JSON.stringify(ldapDomains));\r\n                },\r\n              }, app.translator.trans(translationPrefix + 'domains.add'))))\r\n            ]),\r\n          ]),\r\n        ]);\r\n      }\r\n    )\r\n    .registerSetting(\r\n      {\r\n        setting: settingsPrefix + 'onlyUse',\r\n        label: app.translator.trans(translationPrefix + 'onlyUse'),\r\n        type: 'boolean',\r\n        default: false,\r\n      }\r\n    )\r\n    .registerSetting(\r\n      {\r\n        setting: settingsPrefix + 'display_detailed_error',\r\n        label: app.translator.trans(translationPrefix + 'display_detailed_error'),\r\n        type: 'boolean',\r\n        default: false,\r\n      }\r\n    )\r\n});\r\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","settingsPrefix","translationPrefix","ldapDomainsSettingKey","ldapNicknameAvailableFields","ldapEmailAvailableFields","ldapUsernameAvailableFields","ldapSearchUsernameAvailableFields","_sort","list","selected","i","length","indexOf","splice","app","extensionData","registerSetting","setting","label","translator","trans","type","placeholder","ldapDomains","JSON","parse","this","e","Array","isArray","m","style","map","rule","index","border","Button","className","icon","onclick","stringify","width","colspan","host","onchange","event","target","class","port","baseDN","filter","checked","followReferrals","useSSL","useTLS","admin","dn","password","oncreate","dom","$","select2","multiple","on","dispatchEvent","CustomEvent","val","id","params","data","option","children","detach","append","change","searchFields","trigger","onedit","detail","field","user","username","allowClear","mail","nicknames","push","default"],"sourceRoot":""}